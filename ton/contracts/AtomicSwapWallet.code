.globl	constructor
.public	constructor
.type	constructor, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7_with_init_storage$
}
IF
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
; Decode input parameters
; Decode _codeAtomicSwap
;; decode TvmCell
LDREF
ENDS
;; param: _codeAtomicSwap
; constructor AtomicSwapWallet
ACCEPT
; expValue
; end expValue
;; push identifier _codeAtomicSwap
DUP
; colValue
SETGLOB 10
; end colValue
DROP
; end constructor AtomicSwapWallet
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	sendTransaction
.public	sendTransaction
.type	sendTransaction, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode dest
LDMSGADDR
; Decode value
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode bounce
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
; Decode flag
LDUQ 8
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 8
}
IFNOT
; Decode payload
;; decode TvmCell
LDREF
ENDS
;; param: dest
;; param: value
;; param: bounce
;; param: flag
;; param: payload
; function sendTransaction
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
;; ==
EQUAL
THROWIFNOT 107
ACCEPT
;; transfer()
;; push identifier value
PUSH S3
;; push identifier dest
PUSH S5
;; push identifier bounce
PUSH S4
NEWC
STSLICECONST x6_
STI 1
PUSHINT 3
STZEROES
STSLICE
SWAP
STGRAMS
PUSHINT 105
STZEROES
STSLICECONST 0
STSLICECONST 1
;; push identifier payload
PUSH S1
STREFR
ENDC
;; push identifier flag
PUSH S2
SENDRAWMSG
BLKDROP 5
; end function sendTransaction
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	sendTransaction_internal
.type	sendTransaction_internal, @function
;; param: dest
;; param: value
;; param: bounce
;; param: flag
;; param: payload
; function sendTransaction
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
;; ==
EQUAL
THROWIFNOT 107
ACCEPT
;; transfer()
;; push identifier value
PUSH S3
;; push identifier dest
PUSH S5
;; push identifier bounce
PUSH S4
NEWC
STSLICECONST x6_
STI 1
PUSHINT 3
STZEROES
STSLICE
SWAP
STGRAMS
PUSHINT 105
STZEROES
STSLICECONST 0
STSLICECONST 1
;; push identifier payload
PUSH S1
STREFR
ENDC
;; push identifier flag
PUSH S2
SENDRAWMSG
BLKDROP 5
; end function sendTransaction

.globl	acceptTransfer
.public	acceptTransfer
.type	acceptTransfer, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode payload
LDREF
ENDS
;; param: payload
; function acceptTransfer
;; emit TransferAccepted
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x7d729cc8
;; payload
;; push identifier payload
PUSH S1
STREFR
ENDC
PUSHINT 1
SENDRAWMSG
DROP
; end function acceptTransfer
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	acceptTransfer_internal
.type	acceptTransfer_internal, @function
;; param: payload
; function acceptTransfer
;; emit TransferAccepted
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x7d729cc8
;; payload
;; push identifier payload
PUSH S1
STREFR
ENDC
PUSHINT 1
SENDRAWMSG
DROP
; end function acceptTransfer

.globl	createSwap
.public	createSwap
.type	createSwap, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode initiator
LDMSGADDR
; Decode participant
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode amount
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode timeLock
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
; Decode data
;; decode TvmCell
LDREF
ENDS
;; param: initiator
;; param: participant
;; param: amount
;; param: timeLock
;; param: data
; function createSwap
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
;; ==
EQUAL
THROWIFNOT 107
ACCEPT
;; get member balance
GETPARAM 7
INDEX 0
;; push identifier amount
PUSH S3
PUSHINT 10000000
;; +
ADD
UFITS 128
;; >=
GEQ
THROWIFNOT 109
;; push identifier timeLock
PUSH S1
;; push identifier now
NOW
;; >
GREATER
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier timeLock
	PUSH S1
	;; push identifier now
	NOW
	PUSHINT 604800
	;; +
	ADD
	;; <
	LESS
}
IF
THROWIFNOT 104
;; push identifier codeAtomicSwap
GETGLOB 10
;; push identifier data
PUSH S1
CALL $build_state_init_macro$
;; decl: atomicSwapStateInit
;; push identifier atomicSwapStateInit
DUP
DUP
HASHCU
CALL $make_std_address_with_zero_wid_macro$
;; push identifier amount
PUSH S5
PUSHINT 10000000
;; +
ADD
UFITS 128
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHINT 105
STZEROES
STSLICECONST xc_
STSLICECONST 1
PUSH S2
STREFR
STSLICECONST 1
NEWC
STSLICECONST x5b40b639
;; _initiator
;; push identifier initiator
PUSH S9
STSLICER
;; _participant
;; push identifier participant
PUSH S8
STSLICER
;; _amount
;; push identifier amount
PUSH S7
STUR 128
;; _timeLock
;; push identifier timeLock
PUSH S6
STUR 32
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
NIP
;; decl: atomicSwap
;; return
;; push identifier atomicSwap
DUP
;; push identifier data
PUSH S3
BLKDROP2 7, 2
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xa90e07a8
	PUSH S2
	STSLICER
	PUSH S1
	STREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP2
; end function createSwap
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	createSwap_internal
.type	createSwap_internal, @function
;; param: initiator
;; param: participant
;; param: amount
;; param: timeLock
;; param: data
; function createSwap
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
;; ==
EQUAL
THROWIFNOT 107
ACCEPT
;; get member balance
GETPARAM 7
INDEX 0
;; push identifier amount
PUSH S3
PUSHINT 10000000
;; +
ADD
UFITS 128
;; >=
GEQ
THROWIFNOT 109
;; push identifier timeLock
PUSH S1
;; push identifier now
NOW
;; >
GREATER
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier timeLock
	PUSH S1
	;; push identifier now
	NOW
	PUSHINT 604800
	;; +
	ADD
	;; <
	LESS
}
IF
THROWIFNOT 104
;; push identifier codeAtomicSwap
GETGLOB 10
;; push identifier data
PUSH S1
CALL $build_state_init_macro$
;; decl: atomicSwapStateInit
;; push identifier atomicSwapStateInit
DUP
DUP
HASHCU
CALL $make_std_address_with_zero_wid_macro$
;; push identifier amount
PUSH S5
PUSHINT 10000000
;; +
ADD
UFITS 128
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHINT 105
STZEROES
STSLICECONST xc_
STSLICECONST 1
PUSH S2
STREFR
STSLICECONST 1
NEWC
STSLICECONST x5b40b639
;; _initiator
;; push identifier initiator
PUSH S9
STSLICER
;; _participant
;; push identifier participant
PUSH S8
STSLICER
;; _amount
;; push identifier amount
PUSH S7
STUR 128
;; _timeLock
;; push identifier timeLock
PUSH S6
STUR 32
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
NIP
;; decl: atomicSwap
;; return
;; push identifier atomicSwap
DUP
;; push identifier data
PUSH S3
BLKDROP2 7, 2
; end function createSwap

.globl	hashSecret
.public	hashSecret
.type	hashSecret, @function
; Decode input parameters
; Decode secret
LDREF
ENDS
;; param: secret
; function hashSecret
;; return
;; push identifier secret
DUP
CTOS
SHA256U
;; uint256
UFITS 256
NIP
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xa589af14
	PUSH S1
	STUR 256
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP
; end function hashSecret
EQINT -1
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	hashSecret_internal
.type	hashSecret_internal, @function
;; param: secret
; function hashSecret
;; return
;; push identifier secret
DUP
CTOS
SHA256U
;; uint256
UFITS 256
NIP
; end function hashSecret

.globl	c7_to_c4
.type	c7_to_c4, @function
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
GETGLOB 10
SWAP
STREF
ENDC
POP C4

.globl	c4_to_c7
.type	c4_to_c7, @function
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
PLDREF
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	PLDREF
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init codeAtomicSwap
	NEWC
	ENDC
	SETGLOB 10
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
}
IFELSE

.internal-alias :main_internal,        0
.internal	:main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
PUSHINT 0  ; main_external trans id
PUSH S2
CTOS
LDSLICE 3
NIP
LDI 1     ; bounced tail
DROP
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
PUSHCONT {
}
IFJMP
PUSH S1            ; body
LDUQ 32            ; [funcId] body' ok
PUSHCONT {
	THROW 60
}
IFNOTJMP
PUSH2 S1,S1        ; funcId body' funcId funcId
PUSHCONT {
}
IFNOTJMP
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	THROW 60
}
IFJMP
SWAP  ; body' funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	THROW 60
}
IF

.internal-alias :main_external,        -1
.internal	:main_external
PUSHINT -1 ; main_external trans id
PUSH S1
CALL $c4_to_c7_with_init_storage$
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	DUP
	SETGLOB 5
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
IF
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
PUSH S1 ; funcId body funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	THROW 60
}
IF

